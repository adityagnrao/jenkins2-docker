<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.15">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.2.5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.2.5">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.41">
    <script>pipeline {

  // agent defines where the pipeline will run.
  agent any
  environment {
    SECURE = &quot;TRUE&quot;
  }
  stages {
      
    stage(&apos;install stage 1 - prereq for stress-pipeline scripts&apos;) {
      steps {
        echo &quot;clean up old install if any&quot;
        sh &apos;rm -rf /var/jenkins_home/stress-pipeline&apos;
      }
    }
    
    stage(&apos;install stage 2 - scripts setup stage&apos;) {
      steps {
        echo &quot;stage 2 steps&quot;
        dir (&apos;/var/jenkins_home/stress-pipeline/cluster-1&apos;) {
            git &apos;https://github.com/rohanjayaraj/mapr-cluster-scripts&apos;
            configFileProvider([configFile(fileId: &apos;cluster-1-roles&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/cluster-1/roles/cluster-1-roles&apos;)]) {}
            configFileProvider([configFile(fileId: &apos;mapr-repo&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/cluster-1/repo/mapr.repo&apos;)]) {}        
        }
        dir (&apos;/var/jenkins_home/stress-pipeline/cluster-2&apos;) {
            git &apos;https://github.com/rohanjayaraj/mapr-cluster-scripts&apos;
            configFileProvider([configFile(fileId: &apos;cluster-2-roles&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/cluster-2/roles/cluster-2-roles&apos;)]) {}
            configFileProvider([configFile(fileId: &apos;mapr-repo&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/cluster-2/repo/mapr.repo&apos;)]) {}                
        }
        dir(&apos;/var/jenkins_home/stress-pipeline/config-scripts&apos;) {
            git branch: &apos;cross-cluster&apos;, url: &apos;git@github.com:ssinha3/private-devops-automation-framework.git&apos;
            configFileProvider([configFile(fileId: &apos;cldb-list&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/config-scripts/cldb-list&apos;)]) {}
            configFileProvider([configFile(fileId: &apos;all-nodes&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/config-scripts/all-nodes&apos;)]) {}
            sh &apos;devops/pipeline prepare-development-environment devops mapr&apos;
            sh &apos;npm i&apos;
            sh &apos;npm run build&apos;
        }
        
        dir(&apos;/var/jenkins_home/stress-pipeline/kube-scripts&apos;) {
            git branch: &apos;kubeadm-shayan &apos;, url: &apos;git@github.com:ssinha3/private-devops-kubernetes.git&apos;
            configFileProvider([configFile(fileId: &apos;cluster-1-clients&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/kube-scripts/cluster-1-clients&apos;)]) {}
                    configFileProvider([configFile(fileId: &apos;cluster-2-clients&apos;, 
                    targetLocation: &apos;/var/jenkins_home/stress-pipeline/kube-scripts/cluster-2-clients&apos;)]) {}
            sh &apos;npm i&apos;
            sh &apos;npm run build&apos;
        }
      }
    }
  }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>